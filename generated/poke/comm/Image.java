// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: image.proto

package poke.comm;

public final class Image {
  private Image() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string md5 = 1;</code>
     */
    boolean hasMd5();
    /**
     * <code>optional string md5 = 1;</code>
     */
    java.lang.String getMd5();
    /**
     * <code>optional string md5 = 1;</code>
     */
    com.google.protobuf.ByteString
        getMd5Bytes();

    /**
     * <code>optional int32 demo = 6;</code>
     */
    boolean hasDemo();
    /**
     * <code>optional int32 demo = 6;</code>
     */
    int getDemo();

    /**
     * <code>required int32 client_id = 2;</code>
     */
    boolean hasClientId();
    /**
     * <code>required int32 client_id = 2;</code>
     */
    int getClientId();

    /**
     * <code>required int32 cluster_id = 3;</code>
     */
    boolean hasClusterId();
    /**
     * <code>required int32 cluster_id = 3;</code>
     */
    int getClusterId();

    /**
     * <code>required bool is_client = 4;</code>
     */
    boolean hasIsClient();
    /**
     * <code>required bool is_client = 4;</code>
     */
    boolean getIsClient();

    /**
     * <code>required string caption = 5;</code>
     *
     * <pre>
     * image caption / title
     * </pre>
     */
    boolean hasCaption();
    /**
     * <code>required string caption = 5;</code>
     *
     * <pre>
     * image caption / title
     * </pre>
     */
    java.lang.String getCaption();
    /**
     * <code>required string caption = 5;</code>
     *
     * <pre>
     * image caption / title
     * </pre>
     */
    com.google.protobuf.ByteString
        getCaptionBytes();

    /**
     * <code>optional int32 phase = 7;</code>
     *
     * <pre>
     * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
     * </pre>
     */
    boolean hasPhase();
    /**
     * <code>optional int32 phase = 7;</code>
     *
     * <pre>
     * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
     * </pre>
     */
    int getPhase();
  }
  /**
   * Protobuf type {@code Header}
   */
  public static final class Header extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Header)
      HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Header(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Header defaultInstance;
    public static Header getDefaultInstance() {
      return defaultInstance;
    }

    public Header getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              md5_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              clientId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              clusterId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000010;
              isClient_ = input.readBool();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              caption_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000002;
              demo_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              phase_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poke.comm.Image.internal_static_Header_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poke.comm.Image.internal_static_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poke.comm.Image.Header.class, poke.comm.Image.Header.Builder.class);
    }

    public static com.google.protobuf.Parser<Header> PARSER =
        new com.google.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MD5_FIELD_NUMBER = 1;
    private java.lang.Object md5_;
    /**
     * <code>optional string md5 = 1;</code>
     */
    public boolean hasMd5() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string md5 = 1;</code>
     */
    public java.lang.String getMd5() {
      java.lang.Object ref = md5_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          md5_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string md5 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMd5Bytes() {
      java.lang.Object ref = md5_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        md5_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEMO_FIELD_NUMBER = 6;
    private int demo_;
    /**
     * <code>optional int32 demo = 6;</code>
     */
    public boolean hasDemo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 demo = 6;</code>
     */
    public int getDemo() {
      return demo_;
    }

    public static final int CLIENT_ID_FIELD_NUMBER = 2;
    private int clientId_;
    /**
     * <code>required int32 client_id = 2;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 client_id = 2;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    public static final int CLUSTER_ID_FIELD_NUMBER = 3;
    private int clusterId_;
    /**
     * <code>required int32 cluster_id = 3;</code>
     */
    public boolean hasClusterId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 cluster_id = 3;</code>
     */
    public int getClusterId() {
      return clusterId_;
    }

    public static final int IS_CLIENT_FIELD_NUMBER = 4;
    private boolean isClient_;
    /**
     * <code>required bool is_client = 4;</code>
     */
    public boolean hasIsClient() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool is_client = 4;</code>
     */
    public boolean getIsClient() {
      return isClient_;
    }

    public static final int CAPTION_FIELD_NUMBER = 5;
    private java.lang.Object caption_;
    /**
     * <code>required string caption = 5;</code>
     *
     * <pre>
     * image caption / title
     * </pre>
     */
    public boolean hasCaption() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string caption = 5;</code>
     *
     * <pre>
     * image caption / title
     * </pre>
     */
    public java.lang.String getCaption() {
      java.lang.Object ref = caption_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          caption_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string caption = 5;</code>
     *
     * <pre>
     * image caption / title
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCaptionBytes() {
      java.lang.Object ref = caption_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        caption_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PHASE_FIELD_NUMBER = 7;
    private int phase_;
    /**
     * <code>optional int32 phase = 7;</code>
     *
     * <pre>
     * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
     * </pre>
     */
    public boolean hasPhase() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 phase = 7;</code>
     *
     * <pre>
     * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
     * </pre>
     */
    public int getPhase() {
      return phase_;
    }

    private void initFields() {
      md5_ = "";
      demo_ = 0;
      clientId_ = 0;
      clusterId_ = 0;
      isClient_ = false;
      caption_ = "";
      phase_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasClientId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClusterId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsClient()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCaption()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMd5Bytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(2, clientId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(3, clusterId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(4, isClient_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(5, getCaptionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(6, demo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, phase_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMd5Bytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, clientId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, clusterId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isClient_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCaptionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, demo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, phase_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poke.comm.Image.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poke.comm.Image.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poke.comm.Image.Header prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Header)
        poke.comm.Image.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poke.comm.Image.internal_static_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poke.comm.Image.internal_static_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poke.comm.Image.Header.class, poke.comm.Image.Header.Builder.class);
      }

      // Construct using poke.comm.Image.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        md5_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        demo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clusterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isClient_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        caption_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        phase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poke.comm.Image.internal_static_Header_descriptor;
      }

      public poke.comm.Image.Header getDefaultInstanceForType() {
        return poke.comm.Image.Header.getDefaultInstance();
      }

      public poke.comm.Image.Header build() {
        poke.comm.Image.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poke.comm.Image.Header buildPartial() {
        poke.comm.Image.Header result = new poke.comm.Image.Header(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.md5_ = md5_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.demo_ = demo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clusterId_ = clusterId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isClient_ = isClient_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.caption_ = caption_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.phase_ = phase_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poke.comm.Image.Header) {
          return mergeFrom((poke.comm.Image.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poke.comm.Image.Header other) {
        if (other == poke.comm.Image.Header.getDefaultInstance()) return this;
        if (other.hasMd5()) {
          bitField0_ |= 0x00000001;
          md5_ = other.md5_;
          onChanged();
        }
        if (other.hasDemo()) {
          setDemo(other.getDemo());
        }
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        if (other.hasClusterId()) {
          setClusterId(other.getClusterId());
        }
        if (other.hasIsClient()) {
          setIsClient(other.getIsClient());
        }
        if (other.hasCaption()) {
          bitField0_ |= 0x00000020;
          caption_ = other.caption_;
          onChanged();
        }
        if (other.hasPhase()) {
          setPhase(other.getPhase());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClientId()) {
          
          return false;
        }
        if (!hasClusterId()) {
          
          return false;
        }
        if (!hasIsClient()) {
          
          return false;
        }
        if (!hasCaption()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poke.comm.Image.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poke.comm.Image.Header) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object md5_ = "";
      /**
       * <code>optional string md5 = 1;</code>
       */
      public boolean hasMd5() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string md5 = 1;</code>
       */
      public java.lang.String getMd5() {
        java.lang.Object ref = md5_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            md5_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string md5 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMd5Bytes() {
        java.lang.Object ref = md5_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          md5_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string md5 = 1;</code>
       */
      public Builder setMd5(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        md5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string md5 = 1;</code>
       */
      public Builder clearMd5() {
        bitField0_ = (bitField0_ & ~0x00000001);
        md5_ = getDefaultInstance().getMd5();
        onChanged();
        return this;
      }
      /**
       * <code>optional string md5 = 1;</code>
       */
      public Builder setMd5Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        md5_ = value;
        onChanged();
        return this;
      }

      private int demo_ ;
      /**
       * <code>optional int32 demo = 6;</code>
       */
      public boolean hasDemo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 demo = 6;</code>
       */
      public int getDemo() {
        return demo_;
      }
      /**
       * <code>optional int32 demo = 6;</code>
       */
      public Builder setDemo(int value) {
        bitField0_ |= 0x00000002;
        demo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 demo = 6;</code>
       */
      public Builder clearDemo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        demo_ = 0;
        onChanged();
        return this;
      }

      private int clientId_ ;
      /**
       * <code>required int32 client_id = 2;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 client_id = 2;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>required int32 client_id = 2;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 client_id = 2;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      private int clusterId_ ;
      /**
       * <code>required int32 cluster_id = 3;</code>
       */
      public boolean hasClusterId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 cluster_id = 3;</code>
       */
      public int getClusterId() {
        return clusterId_;
      }
      /**
       * <code>required int32 cluster_id = 3;</code>
       */
      public Builder setClusterId(int value) {
        bitField0_ |= 0x00000008;
        clusterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cluster_id = 3;</code>
       */
      public Builder clearClusterId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clusterId_ = 0;
        onChanged();
        return this;
      }

      private boolean isClient_ ;
      /**
       * <code>required bool is_client = 4;</code>
       */
      public boolean hasIsClient() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool is_client = 4;</code>
       */
      public boolean getIsClient() {
        return isClient_;
      }
      /**
       * <code>required bool is_client = 4;</code>
       */
      public Builder setIsClient(boolean value) {
        bitField0_ |= 0x00000010;
        isClient_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool is_client = 4;</code>
       */
      public Builder clearIsClient() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isClient_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object caption_ = "";
      /**
       * <code>required string caption = 5;</code>
       *
       * <pre>
       * image caption / title
       * </pre>
       */
      public boolean hasCaption() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string caption = 5;</code>
       *
       * <pre>
       * image caption / title
       * </pre>
       */
      public java.lang.String getCaption() {
        java.lang.Object ref = caption_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            caption_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string caption = 5;</code>
       *
       * <pre>
       * image caption / title
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCaptionBytes() {
        java.lang.Object ref = caption_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          caption_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string caption = 5;</code>
       *
       * <pre>
       * image caption / title
       * </pre>
       */
      public Builder setCaption(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        caption_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string caption = 5;</code>
       *
       * <pre>
       * image caption / title
       * </pre>
       */
      public Builder clearCaption() {
        bitField0_ = (bitField0_ & ~0x00000020);
        caption_ = getDefaultInstance().getCaption();
        onChanged();
        return this;
      }
      /**
       * <code>required string caption = 5;</code>
       *
       * <pre>
       * image caption / title
       * </pre>
       */
      public Builder setCaptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        caption_ = value;
        onChanged();
        return this;
      }

      private int phase_ ;
      /**
       * <code>optional int32 phase = 7;</code>
       *
       * <pre>
       * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
       * </pre>
       */
      public boolean hasPhase() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 phase = 7;</code>
       *
       * <pre>
       * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
       * </pre>
       */
      public int getPhase() {
        return phase_;
      }
      /**
       * <code>optional int32 phase = 7;</code>
       *
       * <pre>
       * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
       * </pre>
       */
      public Builder setPhase(int value) {
        bitField0_ |= 0x00000040;
        phase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 phase = 7;</code>
       *
       * <pre>
       * tells which phase the image is in. 1.from client to server, 2. from server to leader, 3. split image sent from leader
       * </pre>
       */
      public Builder clearPhase() {
        bitField0_ = (bitField0_ & ~0x00000040);
        phase_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Header)
    }

    static {
      defaultInstance = new Header(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Header)
  }

  public interface PayLoadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PayLoad)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Image format should be PNG
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Image format should be PNG
     * </pre>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional int32 img_id = 2;</code>
     *
     * <pre>
     * To identify image uniquely
     * </pre>
     */
    boolean hasImgId();
    /**
     * <code>optional int32 img_id = 2;</code>
     *
     * <pre>
     * To identify image uniquely
     * </pre>
     */
    int getImgId();

    /**
     * <code>optional int32 chunk_id = 3;</code>
     *
     * <pre>
     *To identify chunk of a image uniquely
     * </pre>
     */
    boolean hasChunkId();
    /**
     * <code>optional int32 chunk_id = 3;</code>
     *
     * <pre>
     *To identify chunk of a image uniquely
     * </pre>
     */
    int getChunkId();

    /**
     * <code>optional int32 total_chunks = 4;</code>
     *
     * <pre>
     *Total no of chunks
     * </pre>
     */
    boolean hasTotalChunks();
    /**
     * <code>optional int32 total_chunks = 4;</code>
     *
     * <pre>
     *Total no of chunks
     * </pre>
     */
    int getTotalChunks();

    /**
     * <code>optional bool isTile = 5;</code>
     *
     * <pre>
     * to tell if it is the original image or a tile.
     * </pre>
     */
    boolean hasIsTile();
    /**
     * <code>optional bool isTile = 5;</code>
     *
     * <pre>
     * to tell if it is the original image or a tile.
     * </pre>
     */
    boolean getIsTile();
  }
  /**
   * Protobuf type {@code PayLoad}
   */
  public static final class PayLoad extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PayLoad)
      PayLoadOrBuilder {
    // Use PayLoad.newBuilder() to construct.
    private PayLoad(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PayLoad(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PayLoad defaultInstance;
    public static PayLoad getDefaultInstance() {
      return defaultInstance;
    }

    public PayLoad getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PayLoad(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              data_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              imgId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              chunkId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalChunks_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isTile_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poke.comm.Image.internal_static_PayLoad_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poke.comm.Image.internal_static_PayLoad_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poke.comm.Image.PayLoad.class, poke.comm.Image.PayLoad.Builder.class);
    }

    public static com.google.protobuf.Parser<PayLoad> PARSER =
        new com.google.protobuf.AbstractParser<PayLoad>() {
      public PayLoad parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PayLoad(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PayLoad> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Image format should be PNG
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Image format should be PNG
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int IMG_ID_FIELD_NUMBER = 2;
    private int imgId_;
    /**
     * <code>optional int32 img_id = 2;</code>
     *
     * <pre>
     * To identify image uniquely
     * </pre>
     */
    public boolean hasImgId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 img_id = 2;</code>
     *
     * <pre>
     * To identify image uniquely
     * </pre>
     */
    public int getImgId() {
      return imgId_;
    }

    public static final int CHUNK_ID_FIELD_NUMBER = 3;
    private int chunkId_;
    /**
     * <code>optional int32 chunk_id = 3;</code>
     *
     * <pre>
     *To identify chunk of a image uniquely
     * </pre>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 chunk_id = 3;</code>
     *
     * <pre>
     *To identify chunk of a image uniquely
     * </pre>
     */
    public int getChunkId() {
      return chunkId_;
    }

    public static final int TOTAL_CHUNKS_FIELD_NUMBER = 4;
    private int totalChunks_;
    /**
     * <code>optional int32 total_chunks = 4;</code>
     *
     * <pre>
     *Total no of chunks
     * </pre>
     */
    public boolean hasTotalChunks() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 total_chunks = 4;</code>
     *
     * <pre>
     *Total no of chunks
     * </pre>
     */
    public int getTotalChunks() {
      return totalChunks_;
    }

    public static final int ISTILE_FIELD_NUMBER = 5;
    private boolean isTile_;
    /**
     * <code>optional bool isTile = 5;</code>
     *
     * <pre>
     * to tell if it is the original image or a tile.
     * </pre>
     */
    public boolean hasIsTile() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool isTile = 5;</code>
     *
     * <pre>
     * to tell if it is the original image or a tile.
     * </pre>
     */
    public boolean getIsTile() {
      return isTile_;
    }

    private void initFields() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      imgId_ = 0;
      chunkId_ = 0;
      totalChunks_ = 0;
      isTile_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, imgId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, chunkId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, totalChunks_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, isTile_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, imgId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, chunkId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalChunks_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isTile_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poke.comm.Image.PayLoad parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.PayLoad parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.PayLoad parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.PayLoad parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.PayLoad parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.PayLoad parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.PayLoad parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poke.comm.Image.PayLoad parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.PayLoad parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.PayLoad parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poke.comm.Image.PayLoad prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PayLoad}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PayLoad)
        poke.comm.Image.PayLoadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poke.comm.Image.internal_static_PayLoad_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poke.comm.Image.internal_static_PayLoad_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poke.comm.Image.PayLoad.class, poke.comm.Image.PayLoad.Builder.class);
      }

      // Construct using poke.comm.Image.PayLoad.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        imgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalChunks_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isTile_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poke.comm.Image.internal_static_PayLoad_descriptor;
      }

      public poke.comm.Image.PayLoad getDefaultInstanceForType() {
        return poke.comm.Image.PayLoad.getDefaultInstance();
      }

      public poke.comm.Image.PayLoad build() {
        poke.comm.Image.PayLoad result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poke.comm.Image.PayLoad buildPartial() {
        poke.comm.Image.PayLoad result = new poke.comm.Image.PayLoad(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.imgId_ = imgId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalChunks_ = totalChunks_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isTile_ = isTile_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poke.comm.Image.PayLoad) {
          return mergeFrom((poke.comm.Image.PayLoad)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poke.comm.Image.PayLoad other) {
        if (other == poke.comm.Image.PayLoad.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasImgId()) {
          setImgId(other.getImgId());
        }
        if (other.hasChunkId()) {
          setChunkId(other.getChunkId());
        }
        if (other.hasTotalChunks()) {
          setTotalChunks(other.getTotalChunks());
        }
        if (other.hasIsTile()) {
          setIsTile(other.getIsTile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poke.comm.Image.PayLoad parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poke.comm.Image.PayLoad) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Image format should be PNG
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Image format should be PNG
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Image format should be PNG
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Image format should be PNG
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int imgId_ ;
      /**
       * <code>optional int32 img_id = 2;</code>
       *
       * <pre>
       * To identify image uniquely
       * </pre>
       */
      public boolean hasImgId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 img_id = 2;</code>
       *
       * <pre>
       * To identify image uniquely
       * </pre>
       */
      public int getImgId() {
        return imgId_;
      }
      /**
       * <code>optional int32 img_id = 2;</code>
       *
       * <pre>
       * To identify image uniquely
       * </pre>
       */
      public Builder setImgId(int value) {
        bitField0_ |= 0x00000002;
        imgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 img_id = 2;</code>
       *
       * <pre>
       * To identify image uniquely
       * </pre>
       */
      public Builder clearImgId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        imgId_ = 0;
        onChanged();
        return this;
      }

      private int chunkId_ ;
      /**
       * <code>optional int32 chunk_id = 3;</code>
       *
       * <pre>
       *To identify chunk of a image uniquely
       * </pre>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 chunk_id = 3;</code>
       *
       * <pre>
       *To identify chunk of a image uniquely
       * </pre>
       */
      public int getChunkId() {
        return chunkId_;
      }
      /**
       * <code>optional int32 chunk_id = 3;</code>
       *
       * <pre>
       *To identify chunk of a image uniquely
       * </pre>
       */
      public Builder setChunkId(int value) {
        bitField0_ |= 0x00000004;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chunk_id = 3;</code>
       *
       * <pre>
       *To identify chunk of a image uniquely
       * </pre>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkId_ = 0;
        onChanged();
        return this;
      }

      private int totalChunks_ ;
      /**
       * <code>optional int32 total_chunks = 4;</code>
       *
       * <pre>
       *Total no of chunks
       * </pre>
       */
      public boolean hasTotalChunks() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 total_chunks = 4;</code>
       *
       * <pre>
       *Total no of chunks
       * </pre>
       */
      public int getTotalChunks() {
        return totalChunks_;
      }
      /**
       * <code>optional int32 total_chunks = 4;</code>
       *
       * <pre>
       *Total no of chunks
       * </pre>
       */
      public Builder setTotalChunks(int value) {
        bitField0_ |= 0x00000008;
        totalChunks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_chunks = 4;</code>
       *
       * <pre>
       *Total no of chunks
       * </pre>
       */
      public Builder clearTotalChunks() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalChunks_ = 0;
        onChanged();
        return this;
      }

      private boolean isTile_ ;
      /**
       * <code>optional bool isTile = 5;</code>
       *
       * <pre>
       * to tell if it is the original image or a tile.
       * </pre>
       */
      public boolean hasIsTile() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool isTile = 5;</code>
       *
       * <pre>
       * to tell if it is the original image or a tile.
       * </pre>
       */
      public boolean getIsTile() {
        return isTile_;
      }
      /**
       * <code>optional bool isTile = 5;</code>
       *
       * <pre>
       * to tell if it is the original image or a tile.
       * </pre>
       */
      public Builder setIsTile(boolean value) {
        bitField0_ |= 0x00000010;
        isTile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isTile = 5;</code>
       *
       * <pre>
       * to tell if it is the original image or a tile.
       * </pre>
       */
      public Builder clearIsTile() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isTile_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PayLoad)
    }

    static {
      defaultInstance = new PayLoad(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PayLoad)
  }

  public interface TileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Tile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string tileSuffix = 1;</code>
     *
     * <pre>
     *used to identify the tile uniquely for an image.
     * </pre>
     */
    boolean hasTileSuffix();
    /**
     * <code>required string tileSuffix = 1;</code>
     *
     * <pre>
     *used to identify the tile uniquely for an image.
     * </pre>
     */
    java.lang.String getTileSuffix();
    /**
     * <code>required string tileSuffix = 1;</code>
     *
     * <pre>
     *used to identify the tile uniquely for an image.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTileSuffixBytes();

    /**
     * <code>required int32 tileX = 2;</code>
     *
     * <pre>
     *tiles x-cordinate
     * </pre>
     */
    boolean hasTileX();
    /**
     * <code>required int32 tileX = 2;</code>
     *
     * <pre>
     *tiles x-cordinate
     * </pre>
     */
    int getTileX();

    /**
     * <code>required int32 tileY = 3;</code>
     *
     * <pre>
     *tiles y-cordinate
     * </pre>
     */
    boolean hasTileY();
    /**
     * <code>required int32 tileY = 3;</code>
     *
     * <pre>
     *tiles y-cordinate
     * </pre>
     */
    int getTileY();

    /**
     * <code>required bool is_processed = 4;</code>
     *
     * <pre>
     * to check if the tile is processed or not.
     * </pre>
     */
    boolean hasIsProcessed();
    /**
     * <code>required bool is_processed = 4;</code>
     *
     * <pre>
     * to check if the tile is processed or not.
     * </pre>
     */
    boolean getIsProcessed();
  }
  /**
   * Protobuf type {@code Tile}
   */
  public static final class Tile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Tile)
      TileOrBuilder {
    // Use Tile.newBuilder() to construct.
    private Tile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Tile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Tile defaultInstance;
    public static Tile getDefaultInstance() {
      return defaultInstance;
    }

    public Tile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Tile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              tileSuffix_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tileX_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tileY_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isProcessed_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poke.comm.Image.internal_static_Tile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poke.comm.Image.internal_static_Tile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poke.comm.Image.Tile.class, poke.comm.Image.Tile.Builder.class);
    }

    public static com.google.protobuf.Parser<Tile> PARSER =
        new com.google.protobuf.AbstractParser<Tile>() {
      public Tile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Tile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TILESUFFIX_FIELD_NUMBER = 1;
    private java.lang.Object tileSuffix_;
    /**
     * <code>required string tileSuffix = 1;</code>
     *
     * <pre>
     *used to identify the tile uniquely for an image.
     * </pre>
     */
    public boolean hasTileSuffix() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string tileSuffix = 1;</code>
     *
     * <pre>
     *used to identify the tile uniquely for an image.
     * </pre>
     */
    public java.lang.String getTileSuffix() {
      java.lang.Object ref = tileSuffix_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tileSuffix_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string tileSuffix = 1;</code>
     *
     * <pre>
     *used to identify the tile uniquely for an image.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTileSuffixBytes() {
      java.lang.Object ref = tileSuffix_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tileSuffix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TILEX_FIELD_NUMBER = 2;
    private int tileX_;
    /**
     * <code>required int32 tileX = 2;</code>
     *
     * <pre>
     *tiles x-cordinate
     * </pre>
     */
    public boolean hasTileX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 tileX = 2;</code>
     *
     * <pre>
     *tiles x-cordinate
     * </pre>
     */
    public int getTileX() {
      return tileX_;
    }

    public static final int TILEY_FIELD_NUMBER = 3;
    private int tileY_;
    /**
     * <code>required int32 tileY = 3;</code>
     *
     * <pre>
     *tiles y-cordinate
     * </pre>
     */
    public boolean hasTileY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 tileY = 3;</code>
     *
     * <pre>
     *tiles y-cordinate
     * </pre>
     */
    public int getTileY() {
      return tileY_;
    }

    public static final int IS_PROCESSED_FIELD_NUMBER = 4;
    private boolean isProcessed_;
    /**
     * <code>required bool is_processed = 4;</code>
     *
     * <pre>
     * to check if the tile is processed or not.
     * </pre>
     */
    public boolean hasIsProcessed() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool is_processed = 4;</code>
     *
     * <pre>
     * to check if the tile is processed or not.
     * </pre>
     */
    public boolean getIsProcessed() {
      return isProcessed_;
    }

    private void initFields() {
      tileSuffix_ = "";
      tileX_ = 0;
      tileY_ = 0;
      isProcessed_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTileSuffix()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTileX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTileY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsProcessed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTileSuffixBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tileX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, tileY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isProcessed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTileSuffixBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tileX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, tileY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isProcessed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poke.comm.Image.Tile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Tile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Tile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Tile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Tile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Tile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Tile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poke.comm.Image.Tile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Tile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Tile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poke.comm.Image.Tile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Tile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Tile)
        poke.comm.Image.TileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poke.comm.Image.internal_static_Tile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poke.comm.Image.internal_static_Tile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poke.comm.Image.Tile.class, poke.comm.Image.Tile.Builder.class);
      }

      // Construct using poke.comm.Image.Tile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tileSuffix_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tileX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tileY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isProcessed_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poke.comm.Image.internal_static_Tile_descriptor;
      }

      public poke.comm.Image.Tile getDefaultInstanceForType() {
        return poke.comm.Image.Tile.getDefaultInstance();
      }

      public poke.comm.Image.Tile build() {
        poke.comm.Image.Tile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poke.comm.Image.Tile buildPartial() {
        poke.comm.Image.Tile result = new poke.comm.Image.Tile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tileSuffix_ = tileSuffix_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tileX_ = tileX_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tileY_ = tileY_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isProcessed_ = isProcessed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poke.comm.Image.Tile) {
          return mergeFrom((poke.comm.Image.Tile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poke.comm.Image.Tile other) {
        if (other == poke.comm.Image.Tile.getDefaultInstance()) return this;
        if (other.hasTileSuffix()) {
          bitField0_ |= 0x00000001;
          tileSuffix_ = other.tileSuffix_;
          onChanged();
        }
        if (other.hasTileX()) {
          setTileX(other.getTileX());
        }
        if (other.hasTileY()) {
          setTileY(other.getTileY());
        }
        if (other.hasIsProcessed()) {
          setIsProcessed(other.getIsProcessed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTileSuffix()) {
          
          return false;
        }
        if (!hasTileX()) {
          
          return false;
        }
        if (!hasTileY()) {
          
          return false;
        }
        if (!hasIsProcessed()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poke.comm.Image.Tile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poke.comm.Image.Tile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object tileSuffix_ = "";
      /**
       * <code>required string tileSuffix = 1;</code>
       *
       * <pre>
       *used to identify the tile uniquely for an image.
       * </pre>
       */
      public boolean hasTileSuffix() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string tileSuffix = 1;</code>
       *
       * <pre>
       *used to identify the tile uniquely for an image.
       * </pre>
       */
      public java.lang.String getTileSuffix() {
        java.lang.Object ref = tileSuffix_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tileSuffix_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string tileSuffix = 1;</code>
       *
       * <pre>
       *used to identify the tile uniquely for an image.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTileSuffixBytes() {
        java.lang.Object ref = tileSuffix_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tileSuffix_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string tileSuffix = 1;</code>
       *
       * <pre>
       *used to identify the tile uniquely for an image.
       * </pre>
       */
      public Builder setTileSuffix(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tileSuffix_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string tileSuffix = 1;</code>
       *
       * <pre>
       *used to identify the tile uniquely for an image.
       * </pre>
       */
      public Builder clearTileSuffix() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tileSuffix_ = getDefaultInstance().getTileSuffix();
        onChanged();
        return this;
      }
      /**
       * <code>required string tileSuffix = 1;</code>
       *
       * <pre>
       *used to identify the tile uniquely for an image.
       * </pre>
       */
      public Builder setTileSuffixBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tileSuffix_ = value;
        onChanged();
        return this;
      }

      private int tileX_ ;
      /**
       * <code>required int32 tileX = 2;</code>
       *
       * <pre>
       *tiles x-cordinate
       * </pre>
       */
      public boolean hasTileX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 tileX = 2;</code>
       *
       * <pre>
       *tiles x-cordinate
       * </pre>
       */
      public int getTileX() {
        return tileX_;
      }
      /**
       * <code>required int32 tileX = 2;</code>
       *
       * <pre>
       *tiles x-cordinate
       * </pre>
       */
      public Builder setTileX(int value) {
        bitField0_ |= 0x00000002;
        tileX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 tileX = 2;</code>
       *
       * <pre>
       *tiles x-cordinate
       * </pre>
       */
      public Builder clearTileX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tileX_ = 0;
        onChanged();
        return this;
      }

      private int tileY_ ;
      /**
       * <code>required int32 tileY = 3;</code>
       *
       * <pre>
       *tiles y-cordinate
       * </pre>
       */
      public boolean hasTileY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 tileY = 3;</code>
       *
       * <pre>
       *tiles y-cordinate
       * </pre>
       */
      public int getTileY() {
        return tileY_;
      }
      /**
       * <code>required int32 tileY = 3;</code>
       *
       * <pre>
       *tiles y-cordinate
       * </pre>
       */
      public Builder setTileY(int value) {
        bitField0_ |= 0x00000004;
        tileY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 tileY = 3;</code>
       *
       * <pre>
       *tiles y-cordinate
       * </pre>
       */
      public Builder clearTileY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tileY_ = 0;
        onChanged();
        return this;
      }

      private boolean isProcessed_ ;
      /**
       * <code>required bool is_processed = 4;</code>
       *
       * <pre>
       * to check if the tile is processed or not.
       * </pre>
       */
      public boolean hasIsProcessed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool is_processed = 4;</code>
       *
       * <pre>
       * to check if the tile is processed or not.
       * </pre>
       */
      public boolean getIsProcessed() {
        return isProcessed_;
      }
      /**
       * <code>required bool is_processed = 4;</code>
       *
       * <pre>
       * to check if the tile is processed or not.
       * </pre>
       */
      public Builder setIsProcessed(boolean value) {
        bitField0_ |= 0x00000008;
        isProcessed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool is_processed = 4;</code>
       *
       * <pre>
       * to check if the tile is processed or not.
       * </pre>
       */
      public Builder clearIsProcessed() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isProcessed_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Tile)
    }

    static {
      defaultInstance = new Tile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Tile)
  }

  public interface PingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Ping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool is_ping = 1;</code>
     */
    boolean hasIsPing();
    /**
     * <code>required bool is_ping = 1;</code>
     */
    boolean getIsPing();
  }
  /**
   * Protobuf type {@code Ping}
   */
  public static final class Ping extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Ping)
      PingOrBuilder {
    // Use Ping.newBuilder() to construct.
    private Ping(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Ping(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Ping defaultInstance;
    public static Ping getDefaultInstance() {
      return defaultInstance;
    }

    public Ping getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Ping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isPing_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poke.comm.Image.internal_static_Ping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poke.comm.Image.internal_static_Ping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poke.comm.Image.Ping.class, poke.comm.Image.Ping.Builder.class);
    }

    public static com.google.protobuf.Parser<Ping> PARSER =
        new com.google.protobuf.AbstractParser<Ping>() {
      public Ping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ping(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Ping> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int IS_PING_FIELD_NUMBER = 1;
    private boolean isPing_;
    /**
     * <code>required bool is_ping = 1;</code>
     */
    public boolean hasIsPing() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool is_ping = 1;</code>
     */
    public boolean getIsPing() {
      return isPing_;
    }

    private void initFields() {
      isPing_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIsPing()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isPing_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isPing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poke.comm.Image.Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poke.comm.Image.Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poke.comm.Image.Ping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Ping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Ping)
        poke.comm.Image.PingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poke.comm.Image.internal_static_Ping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poke.comm.Image.internal_static_Ping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poke.comm.Image.Ping.class, poke.comm.Image.Ping.Builder.class);
      }

      // Construct using poke.comm.Image.Ping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isPing_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poke.comm.Image.internal_static_Ping_descriptor;
      }

      public poke.comm.Image.Ping getDefaultInstanceForType() {
        return poke.comm.Image.Ping.getDefaultInstance();
      }

      public poke.comm.Image.Ping build() {
        poke.comm.Image.Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poke.comm.Image.Ping buildPartial() {
        poke.comm.Image.Ping result = new poke.comm.Image.Ping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isPing_ = isPing_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poke.comm.Image.Ping) {
          return mergeFrom((poke.comm.Image.Ping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poke.comm.Image.Ping other) {
        if (other == poke.comm.Image.Ping.getDefaultInstance()) return this;
        if (other.hasIsPing()) {
          setIsPing(other.getIsPing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIsPing()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poke.comm.Image.Ping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poke.comm.Image.Ping) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isPing_ ;
      /**
       * <code>required bool is_ping = 1;</code>
       */
      public boolean hasIsPing() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool is_ping = 1;</code>
       */
      public boolean getIsPing() {
        return isPing_;
      }
      /**
       * <code>required bool is_ping = 1;</code>
       */
      public Builder setIsPing(boolean value) {
        bitField0_ |= 0x00000001;
        isPing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool is_ping = 1;</code>
       */
      public Builder clearIsPing() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isPing_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Ping)
    }

    static {
      defaultInstance = new Ping(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Ping)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>required .Header header = 1;</code>
     */
    poke.comm.Image.Header getHeader();
    /**
     * <code>required .Header header = 1;</code>
     */
    poke.comm.Image.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>required .PayLoad payload = 2;</code>
     */
    boolean hasPayload();
    /**
     * <code>required .PayLoad payload = 2;</code>
     */
    poke.comm.Image.PayLoad getPayload();
    /**
     * <code>required .PayLoad payload = 2;</code>
     */
    poke.comm.Image.PayLoadOrBuilder getPayloadOrBuilder();

    /**
     * <code>required .Ping ping = 3;</code>
     */
    boolean hasPing();
    /**
     * <code>required .Ping ping = 3;</code>
     */
    poke.comm.Image.Ping getPing();
    /**
     * <code>required .Ping ping = 3;</code>
     */
    poke.comm.Image.PingOrBuilder getPingOrBuilder();

    /**
     * <code>optional .Tile tile = 4;</code>
     */
    boolean hasTile();
    /**
     * <code>optional .Tile tile = 4;</code>
     */
    poke.comm.Image.Tile getTile();
    /**
     * <code>optional .Tile tile = 4;</code>
     */
    poke.comm.Image.TileOrBuilder getTileOrBuilder();
  }
  /**
   * Protobuf type {@code Request}
   */
  public static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }

    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              poke.comm.Image.Header.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(poke.comm.Image.Header.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              poke.comm.Image.PayLoad.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = payload_.toBuilder();
              }
              payload_ = input.readMessage(poke.comm.Image.PayLoad.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(payload_);
                payload_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              poke.comm.Image.Ping.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = ping_.toBuilder();
              }
              ping_ = input.readMessage(poke.comm.Image.Ping.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ping_);
                ping_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              poke.comm.Image.Tile.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tile_.toBuilder();
              }
              tile_ = input.readMessage(poke.comm.Image.Tile.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tile_);
                tile_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return poke.comm.Image.internal_static_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return poke.comm.Image.internal_static_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              poke.comm.Image.Request.class, poke.comm.Image.Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Request> PARSER =
        new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private poke.comm.Image.Header header_;
    /**
     * <code>required .Header header = 1;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Header header = 1;</code>
     */
    public poke.comm.Image.Header getHeader() {
      return header_;
    }
    /**
     * <code>required .Header header = 1;</code>
     */
    public poke.comm.Image.HeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private poke.comm.Image.PayLoad payload_;
    /**
     * <code>required .PayLoad payload = 2;</code>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PayLoad payload = 2;</code>
     */
    public poke.comm.Image.PayLoad getPayload() {
      return payload_;
    }
    /**
     * <code>required .PayLoad payload = 2;</code>
     */
    public poke.comm.Image.PayLoadOrBuilder getPayloadOrBuilder() {
      return payload_;
    }

    public static final int PING_FIELD_NUMBER = 3;
    private poke.comm.Image.Ping ping_;
    /**
     * <code>required .Ping ping = 3;</code>
     */
    public boolean hasPing() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .Ping ping = 3;</code>
     */
    public poke.comm.Image.Ping getPing() {
      return ping_;
    }
    /**
     * <code>required .Ping ping = 3;</code>
     */
    public poke.comm.Image.PingOrBuilder getPingOrBuilder() {
      return ping_;
    }

    public static final int TILE_FIELD_NUMBER = 4;
    private poke.comm.Image.Tile tile_;
    /**
     * <code>optional .Tile tile = 4;</code>
     */
    public boolean hasTile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Tile tile = 4;</code>
     */
    public poke.comm.Image.Tile getTile() {
      return tile_;
    }
    /**
     * <code>optional .Tile tile = 4;</code>
     */
    public poke.comm.Image.TileOrBuilder getTileOrBuilder() {
      return tile_;
    }

    private void initFields() {
      header_ = poke.comm.Image.Header.getDefaultInstance();
      payload_ = poke.comm.Image.PayLoad.getDefaultInstance();
      ping_ = poke.comm.Image.Ping.getDefaultInstance();
      tile_ = poke.comm.Image.Tile.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPing()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHeader().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPayload().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPing().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTile()) {
        if (!getTile().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, header_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, payload_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, ping_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, tile_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, header_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, payload_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, ping_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, tile_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static poke.comm.Image.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static poke.comm.Image.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static poke.comm.Image.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static poke.comm.Image.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static poke.comm.Image.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static poke.comm.Image.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(poke.comm.Image.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Request)
        poke.comm.Image.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return poke.comm.Image.internal_static_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return poke.comm.Image.internal_static_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                poke.comm.Image.Request.class, poke.comm.Image.Request.Builder.class);
      }

      // Construct using poke.comm.Image.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
          getPayloadFieldBuilder();
          getPingFieldBuilder();
          getTileFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = poke.comm.Image.Header.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (payloadBuilder_ == null) {
          payload_ = poke.comm.Image.PayLoad.getDefaultInstance();
        } else {
          payloadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (pingBuilder_ == null) {
          ping_ = poke.comm.Image.Ping.getDefaultInstance();
        } else {
          pingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tileBuilder_ == null) {
          tile_ = poke.comm.Image.Tile.getDefaultInstance();
        } else {
          tileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return poke.comm.Image.internal_static_Request_descriptor;
      }

      public poke.comm.Image.Request getDefaultInstanceForType() {
        return poke.comm.Image.Request.getDefaultInstance();
      }

      public poke.comm.Image.Request build() {
        poke.comm.Image.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public poke.comm.Image.Request buildPartial() {
        poke.comm.Image.Request result = new poke.comm.Image.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (payloadBuilder_ == null) {
          result.payload_ = payload_;
        } else {
          result.payload_ = payloadBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (pingBuilder_ == null) {
          result.ping_ = ping_;
        } else {
          result.ping_ = pingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tileBuilder_ == null) {
          result.tile_ = tile_;
        } else {
          result.tile_ = tileBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof poke.comm.Image.Request) {
          return mergeFrom((poke.comm.Image.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(poke.comm.Image.Request other) {
        if (other == poke.comm.Image.Request.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasPayload()) {
          mergePayload(other.getPayload());
        }
        if (other.hasPing()) {
          mergePing(other.getPing());
        }
        if (other.hasTile()) {
          mergeTile(other.getTile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHeader()) {
          
          return false;
        }
        if (!hasPayload()) {
          
          return false;
        }
        if (!hasPing()) {
          
          return false;
        }
        if (!getHeader().isInitialized()) {
          
          return false;
        }
        if (!getPayload().isInitialized()) {
          
          return false;
        }
        if (!getPing().isInitialized()) {
          
          return false;
        }
        if (hasTile()) {
          if (!getTile().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        poke.comm.Image.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (poke.comm.Image.Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private poke.comm.Image.Header header_ = poke.comm.Image.Header.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.Header, poke.comm.Image.Header.Builder, poke.comm.Image.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>required .Header header = 1;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public poke.comm.Image.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder setHeader(poke.comm.Image.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder setHeader(
          poke.comm.Image.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder mergeHeader(poke.comm.Image.Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              header_ != poke.comm.Image.Header.getDefaultInstance()) {
            header_ =
              poke.comm.Image.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = poke.comm.Image.Header.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public poke.comm.Image.Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public poke.comm.Image.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.Header, poke.comm.Image.Header.Builder, poke.comm.Image.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              poke.comm.Image.Header, poke.comm.Image.Header.Builder, poke.comm.Image.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private poke.comm.Image.PayLoad payload_ = poke.comm.Image.PayLoad.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.PayLoad, poke.comm.Image.PayLoad.Builder, poke.comm.Image.PayLoadOrBuilder> payloadBuilder_;
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public poke.comm.Image.PayLoad getPayload() {
        if (payloadBuilder_ == null) {
          return payload_;
        } else {
          return payloadBuilder_.getMessage();
        }
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public Builder setPayload(poke.comm.Image.PayLoad value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          payloadBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public Builder setPayload(
          poke.comm.Image.PayLoad.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          payloadBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public Builder mergePayload(poke.comm.Image.PayLoad value) {
        if (payloadBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              payload_ != poke.comm.Image.PayLoad.getDefaultInstance()) {
            payload_ =
              poke.comm.Image.PayLoad.newBuilder(payload_).mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          payloadBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public Builder clearPayload() {
        if (payloadBuilder_ == null) {
          payload_ = poke.comm.Image.PayLoad.getDefaultInstance();
          onChanged();
        } else {
          payloadBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public poke.comm.Image.PayLoad.Builder getPayloadBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      public poke.comm.Image.PayLoadOrBuilder getPayloadOrBuilder() {
        if (payloadBuilder_ != null) {
          return payloadBuilder_.getMessageOrBuilder();
        } else {
          return payload_;
        }
      }
      /**
       * <code>required .PayLoad payload = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.PayLoad, poke.comm.Image.PayLoad.Builder, poke.comm.Image.PayLoadOrBuilder> 
          getPayloadFieldBuilder() {
        if (payloadBuilder_ == null) {
          payloadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              poke.comm.Image.PayLoad, poke.comm.Image.PayLoad.Builder, poke.comm.Image.PayLoadOrBuilder>(
                  getPayload(),
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        return payloadBuilder_;
      }

      private poke.comm.Image.Ping ping_ = poke.comm.Image.Ping.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.Ping, poke.comm.Image.Ping.Builder, poke.comm.Image.PingOrBuilder> pingBuilder_;
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public boolean hasPing() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public poke.comm.Image.Ping getPing() {
        if (pingBuilder_ == null) {
          return ping_;
        } else {
          return pingBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public Builder setPing(poke.comm.Image.Ping value) {
        if (pingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ping_ = value;
          onChanged();
        } else {
          pingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public Builder setPing(
          poke.comm.Image.Ping.Builder builderForValue) {
        if (pingBuilder_ == null) {
          ping_ = builderForValue.build();
          onChanged();
        } else {
          pingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public Builder mergePing(poke.comm.Image.Ping value) {
        if (pingBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              ping_ != poke.comm.Image.Ping.getDefaultInstance()) {
            ping_ =
              poke.comm.Image.Ping.newBuilder(ping_).mergeFrom(value).buildPartial();
          } else {
            ping_ = value;
          }
          onChanged();
        } else {
          pingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public Builder clearPing() {
        if (pingBuilder_ == null) {
          ping_ = poke.comm.Image.Ping.getDefaultInstance();
          onChanged();
        } else {
          pingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public poke.comm.Image.Ping.Builder getPingBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPingFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      public poke.comm.Image.PingOrBuilder getPingOrBuilder() {
        if (pingBuilder_ != null) {
          return pingBuilder_.getMessageOrBuilder();
        } else {
          return ping_;
        }
      }
      /**
       * <code>required .Ping ping = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.Ping, poke.comm.Image.Ping.Builder, poke.comm.Image.PingOrBuilder> 
          getPingFieldBuilder() {
        if (pingBuilder_ == null) {
          pingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              poke.comm.Image.Ping, poke.comm.Image.Ping.Builder, poke.comm.Image.PingOrBuilder>(
                  getPing(),
                  getParentForChildren(),
                  isClean());
          ping_ = null;
        }
        return pingBuilder_;
      }

      private poke.comm.Image.Tile tile_ = poke.comm.Image.Tile.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.Tile, poke.comm.Image.Tile.Builder, poke.comm.Image.TileOrBuilder> tileBuilder_;
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public boolean hasTile() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public poke.comm.Image.Tile getTile() {
        if (tileBuilder_ == null) {
          return tile_;
        } else {
          return tileBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public Builder setTile(poke.comm.Image.Tile value) {
        if (tileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tile_ = value;
          onChanged();
        } else {
          tileBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public Builder setTile(
          poke.comm.Image.Tile.Builder builderForValue) {
        if (tileBuilder_ == null) {
          tile_ = builderForValue.build();
          onChanged();
        } else {
          tileBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public Builder mergeTile(poke.comm.Image.Tile value) {
        if (tileBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tile_ != poke.comm.Image.Tile.getDefaultInstance()) {
            tile_ =
              poke.comm.Image.Tile.newBuilder(tile_).mergeFrom(value).buildPartial();
          } else {
            tile_ = value;
          }
          onChanged();
        } else {
          tileBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public Builder clearTile() {
        if (tileBuilder_ == null) {
          tile_ = poke.comm.Image.Tile.getDefaultInstance();
          onChanged();
        } else {
          tileBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public poke.comm.Image.Tile.Builder getTileBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTileFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      public poke.comm.Image.TileOrBuilder getTileOrBuilder() {
        if (tileBuilder_ != null) {
          return tileBuilder_.getMessageOrBuilder();
        } else {
          return tile_;
        }
      }
      /**
       * <code>optional .Tile tile = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          poke.comm.Image.Tile, poke.comm.Image.Tile.Builder, poke.comm.Image.TileOrBuilder> 
          getTileFieldBuilder() {
        if (tileBuilder_ == null) {
          tileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              poke.comm.Image.Tile, poke.comm.Image.Tile.Builder, poke.comm.Image.TileOrBuilder>(
                  getTile(),
                  getParentForChildren(),
                  isClean());
          tile_ = null;
        }
        return tileBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Request)
    }

    static {
      defaultInstance = new Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Request)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Header_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PayLoad_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PayLoad_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Tile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Tile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Ping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Ping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Request_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013image.proto\"}\n\006Header\022\013\n\003md5\030\001 \001(\t\022\014\n\004" +
      "demo\030\006 \001(\005\022\021\n\tclient_id\030\002 \002(\005\022\022\n\ncluster" +
      "_id\030\003 \002(\005\022\021\n\tis_client\030\004 \002(\010\022\017\n\007caption\030" +
      "\005 \002(\t\022\r\n\005phase\030\007 \001(\005\"_\n\007PayLoad\022\014\n\004data\030" +
      "\001 \002(\014\022\016\n\006img_id\030\002 \001(\005\022\020\n\010chunk_id\030\003 \001(\005\022" +
      "\024\n\014total_chunks\030\004 \001(\005\022\016\n\006isTile\030\005 \001(\010\"N\n" +
      "\004Tile\022\022\n\ntileSuffix\030\001 \002(\t\022\r\n\005tileX\030\002 \002(\005" +
      "\022\r\n\005tileY\030\003 \002(\005\022\024\n\014is_processed\030\004 \002(\010\"\027\n" +
      "\004Ping\022\017\n\007is_ping\030\001 \002(\010\"g\n\007Request\022\027\n\006hea" +
      "der\030\001 \002(\0132\007.Header\022\031\n\007payload\030\002 \002(\0132\010.Pa",
      "yLoad\022\023\n\004ping\030\003 \002(\0132\005.Ping\022\023\n\004tile\030\004 \001(\013" +
      "2\005.TileB\r\n\tpoke.commH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Header_descriptor,
        new java.lang.String[] { "Md5", "Demo", "ClientId", "ClusterId", "IsClient", "Caption", "Phase", });
    internal_static_PayLoad_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_PayLoad_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PayLoad_descriptor,
        new java.lang.String[] { "Data", "ImgId", "ChunkId", "TotalChunks", "IsTile", });
    internal_static_Tile_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Tile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Tile_descriptor,
        new java.lang.String[] { "TileSuffix", "TileX", "TileY", "IsProcessed", });
    internal_static_Ping_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Ping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Ping_descriptor,
        new java.lang.String[] { "IsPing", });
    internal_static_Request_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Request_descriptor,
        new java.lang.String[] { "Header", "Payload", "Ping", "Tile", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
